apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dendrite.fullname" . }}-config
data:
  dendrite.yaml: |
    # This is the Dendrite configuration file.
    #
    # The configuration is split up into sections - each Dendrite component has a
    # configuration section, in addition to the "global" section which applies to
    # all components.
    #
    # At a minimum, to get started, you will need to update the settings in the
    # "global" section for your deployment, and you will need to check that the
    # database "connection_string" line in each component section is correct.
    #
    # Each component with a "database" section can accept the following formats
    # for "connection_string":
    #   SQLite:     file:filename.db
    #               file:///path/to/filename.db
    #   postgresql: postgresql://user:pass@hostname/database?params=...
    #
    version: 2

    # Global Matrix configuration. This configuration applies to all components.
    global:
      # The domain name of this homeserver.
      server_name: localhost

      # The path to the signing private key file, used to sign requests and events.
      # Note that this is NOT the same private key as used for TLS! To generate a
      # signing key, use "./bin/generate-keys --private-key matrix_key.pem".
      private_key: /etc/dendrite/keys/key.pem

      {{- if .Values.signingKeys.inactiveKeys }}
      old_private_keys:
      {{- range .Values.signingKeys.inactiveKeys }}
        - private_key: {{ .key }}
          expired_at: {{ .expiration }}
      {{- end }}
      {{- end }}

      # How long a remote server can cache our server signing key before requesting it
      # again. Increasing this number will reduce the number of requests made by other
      # servers for our key but increases the period that a compromised key will be
      # considered valid by other homeservers.
      key_validity_period: 168h0m0s

      # The server name to delegate server-server communications to, with optional port
      # e.g. localhost:443
      well_known_server_name: ""

      # Lists of domains that the server will trust as identity servers to verify third
      # party identifiers such as phone numbers and email addresses.
      trusted_third_party_id_servers:
        - matrix.org
        - vector.im

      # Disables federation. Dendrite will not be able to make any outbound HTTP requests
      # to other servers and the federation API will not be exposed.
      disable_federation: false

      # Server notices allows server admins to send messages to all users.
      server_notices:
        enabled: false
        # The server localpart to be used when sending notices, ensure this is not yet taken
        local_part: "_server"
        # The displayname to be used when sending notices
        display_name: "Server alerts"
        # The mxid of the avatar to use
        avatar_url: ""
        # The roomname to be used when creating messages
        room_name: "Server Alerts"

      jetstream:
        # Leave empty to use embedded JetStream
        addresses:
        in_memory: false
        storage_path: /var/lib/dendrite/jetstream
        topic_prefix: Dendrite

      metrics:
        enabled: true

      dns_cache:
        enabled: true
        cache_size: 256
        cache_lifetime: "5m"

    app_service_api:
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_appservice_api
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1

      disable_tls_validation: true
      config_files:
        {{- range .Values.appservice.registrationFiles }}
        - {{ . }}
        {{- end }} 

    # Configuration for the Client API.
    client_api:
      external_api:
        listen: http://[::]:8071

      registration_disabled: {{ .Values.registration.enabled }}
      guests_disabled: {{ .Values.registration.residentsOnly }}
      registration_shared_secret: "{{ .Values.registration.sharedSecret }}"
      enable_registration_captcha: false

      # Settings for ReCAPTCHA.
      recaptcha_public_key: ""
      recaptcha_private_key: ""
      recaptcha_bypass_secret: ""
      recaptcha_siteverify_api: ""

      # TURN server information that this homeserver should send to clients.
      turn:
        turn_user_lifetime: ""
        turn_uris: []
        turn_shared_secret: ""
        turn_username: ""
        turn_password: ""

      # Settings for rate-limited endpoints. Rate limiting will kick in after the
      # threshold number of "slots" have been taken by requests from a specific
      # host. Each "slot" will be released after the cooloff time in milliseconds.
      rate_limiting:
        enabled: true
        threshold: 5
        cooloff_ms: 500

    # Configuration for the Federation API.
    federation_api:
      external_api:
        listen: http://[::]:8072
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_federation_api
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1
      federation_certificates: []
      send_max_retries: 10
      disable_tls_validation: false
      key_perspectives:
        - server_name: matrix.org
          keys:
            - key_id: ed25519:auto
              public_key: Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw
            - key_id: ed25519:a_RXGa
              public_key: l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ
      prefer_direct_fetch: true
    
    key_server:
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_keyserver
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1

    media_api:
      external_api:
        listen: http://[::]:8074
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_media_api
        max_open_conns: 5
        max_idle_conns: 2
        conn_max_lifetime: -1

      base_path: /var/lib/dendrite/media

      # The maximum allowed file size (in bytes) for media uploads to this homeserver
      # (0 = unlimited). If using a reverse proxy, ensure it allows requests at
      # least this large (e.g. client_max_body_size in nginx.)
      max_file_size_bytes: 20000000
      dynamic_thumbnails: true
      max_thumbnail_generators: 10
      thumbnail_sizes:
        - width: 32
          height: 32
          method: crop
        - width: 96
          height: 96
          method: crop
        - width: 640
          height: 480
          method: scale

    mscs:
      mscs:
        - msc2836
        - msc2946
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_mscs
        max_open_conns: 5
        max_idle_conns: 2
        conn_max_lifetime: -1

    room_server:
      database:
        connection_string: file:roomserver.db
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1

    sync_api:
      external_api:
        listen: http://[::]:8073
      database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_sync_api
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1

      # This option controls which HTTP header to inspect to find the real remote IP
      # address of the client. This is likely required if Dendrite is running behind
      # a reverse proxy server.
      # real_ip_header: X-Real-IP

    user_api:
      account_database:
        connection_string: postgresql://{{ .Values.postgresql.username }}:{{ .Values.postgresql.password }}@{{ include "dendrite.fullname" . }}-postgresql-0/dendrite_user_accounts
        max_open_conns: 10
        max_idle_conns: 2
        conn_max_lifetime: -1
    
    tracing:
      enabled: false
      jaeger:
        serviceName: ""
        disabled: false
        rpc_metrics: false
        tags: []
        sampler: null
        reporter: null
        headers: null
        baggage_restrictions: null
        throttler: null

    logging:
      - type: std
        level: info
      
